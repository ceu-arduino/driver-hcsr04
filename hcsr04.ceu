///////////////////////////////////////////////////////////////////////////////
// INTERFACE
///////////////////////////////////////////////////////////////////////////////

code/await Hcsr04 (var int pin_trigger, var int pin_echo) -> int?;

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION
///////////////////////////////////////////////////////////////////////////////

#include "wclock.ceu"
#include "millis_micros.ceu"
#include "gpio.ceu"

#define READ_AWAIT_UNTIL(pin_a,v_a)                                     \
    do                                                                  \
        if (_digitalRead(pin_a)) != v_a then                            \
            var int pin_b;                                              \
            var high/low v_b;                                           \
            (pin_b,v_b) = await PIN_IN until pin_b==pin_a and v_b==v_a; \
        end                                                             \
    end

code/await Hcsr04 (var int pin_trigger, var int pin_echo) -> int? do
    var high/low echo = _digitalRead(pin_echo);
    //_ceu_assert(echo == low, "HCSCR04: bug found");
    //_ceu_arduino_assert(echo == low, 2);

    spawn Millis_Micros();

    emit PIN_OUT(pin_trigger, high);
    _delayMicroseconds(10);
    emit PIN_OUT(pin_trigger, low);

    var int? ret;

    watching 25ms do
        READ_AWAIT_UNTIL(pin_echo, high);
        var u32 old = _micros();
        READ_AWAIT_UNTIL(pin_echo, low);
        var u32 now = _micros();
        ret = (((now - old) as int)/58) as int;
    end

    escape ret;
end
