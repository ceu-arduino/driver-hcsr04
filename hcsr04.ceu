#include "timer1.ceu"

#ifndef HCSR04_PIN_ECHO
#error "Missing #define HCSR04_PIN_ECHO..."
#endif
#ifndef HCSR04_PIN_TRIGGER
#error "Missing #define HCSR04_PIN_TRIGGER..."
#endif

#define _PIN_(a,b) a##b
#define PIN(x) _PIN_(PIN_,x)

///////////////////////////////////////////////////////////////////////////////
// EXTERNAL INTERFACE
///////////////////////////////////////////////////////////////////////////////

code/await Hcsr04 (none) -> int;

///////////////////////////////////////////////////////////////////////////////
// ABSTRACTIONS
///////////////////////////////////////////////////////////////////////////////

output on/off PIN(HCSR04_PIN_TRIGGER);
emit PIN(HCSR04_PIN_TRIGGER)(off);

#define READ_AWAIT_UNTIL(pin,x)                         \
    do                                                  \
        if (_digitalRead(pin) as bool) != x then        \
            var on/off y = await PIN(pin) until x==y;   \
        end                                             \
    end

code/await Hcsr04 (none) -> int do
    var on/off echo = _digitalRead(HCSR04_PIN_ECHO) as on/off;
    //_ceu_assert(echo == off, "HCSCR04: bug found");
    //_ceu_arduino_assert(echo == off, 2);

    {ceu_pm_set(CEU_PM_TIMER0, 1);}
    do finalize with
        {ceu_pm_set(CEU_PM_TIMER0, 0);}
    end

    emit PIN(HCSR04_PIN_TRIGGER)(on);
    _delayMicroseconds(10);
    emit PIN(HCSR04_PIN_TRIGGER)(off);

    var u32 dt = do
        watching 25ms do
        READ_AWAIT_UNTIL(HCSR04_PIN_ECHO, on);
        //var on/off echo = await PIN(HCSR04_PIN_ECHO) until (echo == on);
            var u32 old = _micros();
            READ_AWAIT_UNTIL(HCSR04_PIN_ECHO, off);
            //echo = await PIN(HCSR04_PIN_ECHO) until (echo == off);
            var u32 now = _micros();
            escape (now - old);
        end
        escape 0;
    end;

    var int distance = ((dt as int)/58) as int;
    escape distance;
end
